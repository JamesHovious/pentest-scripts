# -*- encoding:utf-8 -*-
import urllib2
from BeautifulSoup import BeautifulSoup as bs
import re
import sys
import urllib
import urlparse
from multiprocessing import Process, Pool

urlList=[]
sshList = []
telnetList = []
httpList = []
userList = []
passwordList = []

def http_get(url):
	print url
  	result = {"url": url, "data": urllib2.urlopen(url, timeout=10).read()}
  	#result = {"url": url, "data": urllib2.urlopen(url, timeout=5).read()[:100]}
  	return result

class MyOpener(urllib.FancyURLopener):
    version = 'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.15) Gecko/20110303 Firefox/3.6.15'
 
def process(url):
    myopener = MyOpener()
    #page = urllib.urlopen(url)
    page = myopener.open(url)
 
    text = page.read()
    page.close()
 
    soup = bs(text)
    for tag in soup.findAll('a', href=True):
        tag['href'] = urlparse.urljoin(url, tag['href'])
        if "passwords?vendor" in tag['href']:
        	global urlList
        	urlList.append(tag['href'])
	        #print tag['href']
	#return links
process("http://www.cirt.net/passwords")

sshfile = open("wordList_ssh.txt", "w")
telnetfile = open("wordList_telnet.txt", "w")
httpfile = open("wordList_http.txt", "w")

usersfile = open("users.txt", "w")
passwordsfile = open("passwords.txt", "w")

pool = Pool(processes=10)
print "[*] Getting page contents"
results = pool.map(http_get, urlList)

print "[*] Parsing page contents"
for result in results:
	html = result['data']
	soup = bs(html)
	tables = soup.findAll("table")
	for table in tables:
	     if table.findParent("table") is None:
		 found=False
		 found2=False
		 found3=False
		 if "method" in str(table).lower():
			found=True
		        results = str(table).split("<tr>")
		 	username = ""
	 	 	password = ""
		 	for result in results:
				if "method" in result.lower():
					if "ssh" in result.lower():
						found2=True
					if "telnet" in result.lower():
						found3=True
				else:
					#For SSH Passwords					
					if found2==True:
						if "user" in result.lower():
							soup = bs(result)
							p_tags = soup.findAll('td',text=True)
							for i, p_tag in enumerate(p_tags): 
								if i==1:
									username = p_tag
									#print p_tag
						if "password" in result.lower():
							soup = bs(result)
							p_tags = soup.findAll('td',text=True)
							match=False
							for i, p_tag in enumerate(p_tags): 
								if i==0:
									if p_tag.lower()=="password":
										match=True					
								if i==1:
									#print p_tag
									if match==True:
										password = p_tag
										#print ":"+p_tag
							if str(username)!="(none)" and str(username)!="(blank)" and len(username)>0 :
								if str(password)!="(none)" and str(password)!="(blank)":
									tmpStr = ":"+str(username)+":"+str(password)
									if tmpStr not in sshList:
										sshList.append(tmpStr)
										sshfile.write(tmpStr+"\n")
										usersfile.write(str(username)+"\n")
										passwordsfile.write(str(password)+"\n")
					#For Telnet Passwords
					if found3==True:
						if "user" in result.lower():
							soup = bs(result)
							p_tags = soup.findAll('td',text=True)
							for i, p_tag in enumerate(p_tags): 
								if i==1:
									username = p_tag
									#print p_tag
						if "password" in result.lower():
							soup = bs(result)
							p_tags = soup.findAll('td',text=True)
							match=False
							for i, p_tag in enumerate(p_tags): 
								if i==0:
									if p_tag.lower()=="password":
										match=True					
								if i==1:
									#print p_tag
									if match==True:
										password = p_tag
										#print ":"+p_tag
							if str(username)!="(none)" and str(username)!="(blank)" and len(username)>0:
								if str(password)=="(none)" or str(password)=="(blank)":
									password = ""
								tmpStr = ":"+str(username)+":"+str(password)
								if tmpStr not in telnetList:
									telnetList.append(tmpStr)
									telnetfile.write(tmpStr+"\n")
									if username not in userList:
										userList.append(str(username))
										usersfile.write(str(username)+"\n")
									if len(password)>0:
										if password not in passwordList:
											passwordList.append(password)
											passwordsfile.write(str(password)+"\n")

	 	 else:
			#Fixed
			found=True
		 	results = str(table).split("<tr>")
		 	username = ""
	 	 	password = ""
		 	for result in results:
				#print str(result)
				if "user" in result.lower():
					soup = bs(result)
					p_tags = soup.findAll('td',text=True)
					for i, p_tag in enumerate(p_tags): 
						if i==1:
							username = p_tag
							#print p_tag
				if "password" in result.lower():
					soup = bs(result)
					p_tags = soup.findAll('td',text=True)
					match=False
					for i, p_tag in enumerate(p_tags): 
						if i==0:
							if p_tag.lower()=="password":
								match=True					
						if i==1:
							#print p_tag
							if match==True:
								password = p_tag
								#print ":"+p_tag
					if str(username)!="(none)" and str(username)!="(blank)" and len(username)>0:
						if str(password)!="(none)" and str(password)!="(blank)":
							tmpStr = ":"+str(username)+":"+str(password)
							if tmpStr not in sshList:
								sshList.append(tmpStr)
								sshfile.write(tmpStr+"\n")
								if username not in userList:
									userList.append(username)
									usersfile.write(str(username)+"\n")
								if len(password)>0:
									if password not in passwordList:
										passwordList.append(password)
										passwordsfile.write(str(password)+"\n")										
						elif str(password)=="(none)" or str(password)=="(blank)" or len(password)==0:
							password = ""
							tmpStr = ":"+str(username)+":"+str(password)
							if tmpStr not in telnetList:
								telnetList.append(tmpStr)
								telnetfile.write(tmpStr+"\n")	
								if username not in userList:
									userList.append(username)
									usersfile.write(str(username)+"\n")
sshfile.close()
telnetfile.close()
httpfile.close()

urlList = []
for one in range(97,123):
	urlList.append("http://www.passwordsdatabase.com/view/"+chr(one))

telnetfile = open("wordList_telnet.txt", "a+")
sshfile = open("wordList_ssh.txt", "w")
httpfile = open("wordList_http.txt", "w")

pool = Pool(processes=10)
print "[*] Getting page contents"
results = pool.map(http_get, urlList)

print "[*] Parsing page contents"
for result in results:
	html = result['data']
	soup = bs(html)
	tables = soup.findAll("td",{"class":"gen_pad"})
	for table in tables:
		if "method" in str(table).lower():
			found=False
			found1=False
			found2=False
			found3=False
			results = str(table).split("<p>")
			for result in results:
                                if "method" in result.lower():
					if "telnet" in result.lower():
						#print result.strip()
						found=True	
					if "ssh" in result.lower():
						found1=True
					if "multi" in result.lower():
						found2=True
					if "http" in result.lower():
						found3=True

			result = results[4].strip()
			soup = bs(result)
                       	p_tags = soup.findAll('td',text=True)
			try:
				username = p_tags[1]				
			except IndexError:
				username = ""

			result = results[5].strip()
			soup = bs(result)
                      	p_tags = soup.findAll('td',text=True)
			try:
				password = p_tags[1]				
			except IndexError:
				password = ""

			tmpStr = ":"+str(username)+":"+str(password)

			if found==True:
				if tmpStr not in telnetList:
                                	telnetList.append(tmpStr)
                                      	telnetfile.write(tmpStr+"\n")
					found=False
			if found1==True:
				print tmpStr
				if tmpStr not in sshList:
					print tmpStr
                                	sshList.append(tmpStr)
                                      	sshfile.write(tmpStr+"\n")
					found1=False
			if found2==True:
				if tmpStr not in telnetList:
                                	telnetList.append(tmpStr)
                                      	telnetfile.write(tmpStr+"\n")
					found2=False
				if tmpStr not in sshList:
                                	sshList.append(tmpStr)
                                      	sshfile.write(tmpStr+"\n")
					found2=False
				if tmpStr not in httpList:
                                	httpList.append(tmpStr)
                                      	httpfile.write(tmpStr+"\n")
					found2=False
			if found3==True:
				if tmpStr not in httpList:
                                	httpList.append(tmpStr)
                                      	httpfile.write(tmpStr+"\n")
					found3=False

telnetfile.close()
sshfile.close()
httpfile.close()

tempList = []
with open("wordList_telnet.txt") as f:
	for line in f:
		if line not in tempList:
			tempList.append(line)
f=open("wordList_telnet.txt","w")
for line in tempList:
	f.write(line)
f.close()

tempList = []
with open("wordList_ssh.txt") as f:
	for line in f:
		if line not in tempList:
			tempList.append(line)
f=open("wordList_ssh.txt","w")
for line in tempList:
	f.write(line)
f.close()

print "[*] Please check directory for wordList_ssh.txt, wordList_telnet.txt, wordList_http.txt, users.txt and passwords.txt"

